version: '3.8'

x-healthcheck: &healthcheck
    healthcheck:
        test: curl --fail http://localhost || exit 1
        interval: 60s
        retries: 5
        start_period: 20s
        timeout: 10s

services:

    back:
        restart: always
        build: .
        ports:
          - "8001:8001"
        depends_on:
          - postgres
          - redis
        links:
          - postgres
          - redis
        command: >
            bash -c "
            python manage.py makemigrations
            &&python manage.py migrate
            &&python manage.py runserver 0.0.0.0:8001"
        volumes:
            - .:/app
        <<: *healthcheck

    postgres:
        restart: unless-stopped
        image: postgres:latest
        environment:
            - POSTGRES_USER=demouser
            - POSTGRES_PASSWORD=neighbours2290
            - POSTGRES_DB=demodb
        ports:
            - 5432:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data
        <<: *healthcheck

    pgadmin:
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - "80:80"
        volumes:
            - pgadmin:/root/.pgadmin

    redis:
        restart: always
        image: redis:latest
        ports:
            - 6379:6379
        volumes:
            - .services/configs/redis.conf:/redis.conf
        command: ["redis-server", "/redis.conf", "--appendonly", "yes", "--replica-read-only", "no"]
        <<: *healthcheck

    minio:
        image: quay.io/minio/minio
        ports:
            - "9000:9000"
            - "9090:9090"
        volumes:
            - ~/minio/data:/data
        environment:
            MINIO_ROOT_USER: ROOTNAME
            MINIO_ROOT_PASSWORD: CHANGEME123
        command: server /data --console-address ":9090"

    celery_worker:
        build: .
        command: celery -A config worker --loglevel=info
        volumes:
            - .:/app
        environment:
            - DJANGO_SETTINGS_MODULE=config.settings
        depends_on:
            - postgres
            - redis

    celery_beat:
        build: .
        command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
        volumes:
            - .:/app
        environment:
            - DJANGO_SETTINGS_MODULE=config.settings
        depends_on:
            - postgres
            - redis
    

volumes:
    postgres_data:
    pgadmin:

